<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>REVERSE</title>
    <url>/2022/02/13/REVERSE/</url>
    <content><![CDATA[<h4 id="流浪者-XCTF"><a href="#流浪者-XCTF" class="headerlink" title="流浪者-XCTF"></a>流浪者-XCTF</h4><p>文件是exe文件，file命令查看一下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file cm.exe</span><br><span class="line">cm.exe: PE32 executable (GUI) Intel 80386, for MS Windows</span><br></pre></td></tr></table></figure>

<p>运行一下文件看看是什么：是一个窗口，让我们输入密码，然后验证对不对。</p>
<p><img src="/2022/02/13/REVERSE/1.png" alt="1"></p>
<p>放进IDA中进行反汇编：先查看字符，根据关键字符串跟进函数。</p>
<p>找到了：请输入pass，这个字符串点进去，ctrl+x快捷键跟进。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __thiscall <span class="title">sub_401890</span><span class="params">(CWnd *<span class="keyword">this</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">CString</span> *v1; <span class="comment">// ST08_4</span></span><br><span class="line">  CWnd *v2; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> v5[<span class="number">26</span>]; <span class="comment">// [esp+4Ch] [ebp-74h]</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [esp+B4h] [ebp-Ch]</span></span><br><span class="line">  <span class="type">char</span> *Str; <span class="comment">// [esp+B8h] [ebp-8h]</span></span><br><span class="line">  CWnd *v8; <span class="comment">// [esp+BCh] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v8 = <span class="keyword">this</span>;</span><br><span class="line">  v1 = (<span class="keyword">this</span> + <span class="number">100</span>);</span><br><span class="line">  v2 = CWnd::<span class="built_in">GetDlgItem</span>(<span class="keyword">this</span>, <span class="number">1002</span>);</span><br><span class="line">  CWnd::<span class="built_in">GetWindowTextA</span>(v2, v1);<span class="comment">//获取窗口输入的字符串</span></span><br><span class="line">  v3 = <span class="built_in">sub_401A30</span>(v8 + <span class="number">100</span>);</span><br><span class="line">  Str = CString::<span class="built_in">GetBuffer</span>((v8 + <span class="number">100</span>), v3);</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strlen</span>(Str) )</span><br><span class="line">    <span class="keyword">return</span> CWnd::<span class="built_in">MessageBoxA</span>(v8, <span class="string">&quot;请输入pass!&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; Str[i]; ++i ) <span class="comment">//for循环对字符串中的每个字符进行改变。</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( Str[i] &gt; <span class="number">57</span> || Str[i] &lt; <span class="number">48</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( Str[i] &gt; <span class="number">122</span> || Str[i] &lt; <span class="number">97</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( Str[i] &gt; <span class="number">90</span> || Str[i] &lt; <span class="number">65</span> )</span><br><span class="line">          <span class="built_in">sub_4017B0</span>();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          v5[i] = Str[i] - <span class="number">29</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        v5[i] = Str[i] - <span class="number">87</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      v5[i] = Str[i] - <span class="number">48</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">sub_4017F0</span>(v5);</span><br><span class="line">&#125;<span class="comment">//三个if语句，比较输入字符串中的各个字符。然后对v5数组进行赋值。</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">sub_4017F0</span><span class="params">(<span class="type">int</span> a1)</span><span class="comment">//这里的a1就是上面函数的v5数组</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">char</span> Str1[<span class="number">28</span>]; <span class="comment">// [esp+D8h] [ebp-24h]</span></span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// [esp+F4h] [ebp-8h]</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [esp+F8h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( *(a1 + <span class="number">4</span> * v4) &lt; <span class="number">62</span> &amp;&amp; *(a1 + <span class="number">4</span> * v4) &gt;= <span class="number">0</span> )<span class="comment">//这里用指针来进行操作(相当于数组下标)。因为int型是四个字节，这里4*v4就是数组元素下一个元素的地址</span></span><br><span class="line">  &#123;</span><br><span class="line">    Str1[v4] = aAbcdefghiabcde[*(a1 + <span class="number">4</span> * v4)];</span><br><span class="line">    ++v4;</span><br><span class="line">  &#125;</span><br><span class="line">  Str1[v4] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(Str1, <span class="string">&quot;KanXueCTF2019JustForhappy&quot;</span>) )</span><br><span class="line">    result = sub_401770();</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    result = sub_4017B0();</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>文件对用户输入的字符串进行加密，最后与”KanXueCTF2019JustForhappy”进行比较如果相等就弹出 pass。</p>
<p>我们需要对这两个函数进行逆向操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">text=<span class="string">&quot;KanXueCTF2019JustForhappy&quot;</span></span><br><span class="line">passwd=<span class="string">&quot;abcdefghiABCDEFGHIJKLMNjklmn0123456789opqrstuvwxyzOPQRSTUVWXYZ&quot;</span></span><br><span class="line">al=[]</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> text:</span><br><span class="line">    al.append(passwd.index(each))<span class="comment">#对已知比较的字符串来还原，v5数组。</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(al)</span><br><span class="line">v5=al</span><br><span class="line">str1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> v5: <span class="comment">#逆向三个if语句</span></span><br><span class="line">    tem1=i+<span class="number">29</span></span><br><span class="line">    tem2=i+<span class="number">87</span></span><br><span class="line">    tem3=i+<span class="number">48</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">65</span>&lt;=tem1&lt;=<span class="number">90</span>:</span><br><span class="line">        str1.append(tem1)</span><br><span class="line">    <span class="keyword">elif</span> <span class="number">97</span>&lt;=tem2&lt;=<span class="number">122</span>:</span><br><span class="line">        str1.append(tem2)</span><br><span class="line">    <span class="keyword">elif</span> <span class="number">48</span>&lt;=tem3&lt;=<span class="number">57</span>:</span><br><span class="line">        str1.append(tem3)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> str1:</span><br><span class="line">    flag=<span class="built_in">chr</span>(each)</span><br><span class="line">    <span class="built_in">print</span>(flag,end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="babyre–XCTF"><a href="#babyre–XCTF" class="headerlink" title="babyre–XCTF"></a>babyre–XCTF</h4><p>文件是六十四位ELF文件，放进IDA中。</p>
<p>这里出现一点问题，这是做逆向以来没有遇到过的</p>
<p><img src="/2022/02/13/REVERSE/2.png" alt="2"></p>
<p>在F5对judge函数进行反汇编时，出现这个错误。</p>
<p><img src="/2022/02/13/REVERSE/3.png" alt="3"></p>
<p>报错的原因是：在主函数中，对指向judge函数的指针地址进行异或操作，在调用时无法找到真正的函数地址。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s=<span class="number">0x600b01</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">182</span>):</span><br><span class="line">  PatchByte((a+i),Byte(a+i)^<span class="number">12</span>)</span><br></pre></td></tr></table></figure>

<p>在IDA中运行脚本将函数的地址还原。</p>
<p><img src="/2022/02/13/REVERSE/4.png" alt="4"></p>
<p>这是judge函数，对输入的内容进行异或。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">passwd=[<span class="number">102</span>,<span class="number">109</span>,<span class="number">99</span>,<span class="number">100</span>,<span class="number">127</span>,<span class="number">107</span>,<span class="number">55</span>,<span class="number">100</span>,<span class="number">59</span>,<span class="number">86</span>,<span class="number">96</span>,<span class="number">59</span>,<span class="number">110</span>,<span class="number">112</span>]</span><br><span class="line">flag=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">14</span>):</span><br><span class="line">    flag[i]=passwd[i]^i</span><br><span class="line">    text=<span class="built_in">chr</span>(flag[i])</span><br><span class="line">    <span class="built_in">print</span>(text,end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="ctfshow–re2"><a href="#ctfshow–re2" class="headerlink" title="ctfshow–re2"></a>ctfshow–re2</h4><p>RC4：<a href="https://www.cnblogs.com/zibility/p/5404478.html">RC4加密算法 - zbility - 博客园 (cnblogs.com)</a></p>
<h4 id="ctfshow–逆向4"><a href="#ctfshow–逆向4" class="headerlink" title="ctfshow–逆向4"></a>ctfshow–逆向4</h4><p><a href="https://blog.csdn.net/weixin_45582916/article/details/118497453?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~HighlightScore-2.queryctrv2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~HighlightScore-2.queryctrv2&amp;utm_relevant_index=5">https://blog.csdn.net/weixin_45582916/article/details/118497453?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7EHighlightScore-2.queryctrv2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7EHighlightScore-2.queryctrv2&amp;utm_relevant_index=5</a></p>
<h4 id="asm逆向：-1条消息-逆向基础—ASM结构代码识别-Leon-博客-CSDN博客"><a href="#asm逆向：-1条消息-逆向基础—ASM结构代码识别-Leon-博客-CSDN博客" class="headerlink" title="asm逆向：(1条消息) 逆向基础—ASM结构代码识别_Leon~博客-CSDN博客"></a><strong>asm逆向</strong>：<a href="https://blog.csdn.net/sinat_36711025/article/details/106073014">(1条消息) 逆向基础—ASM结构代码识别_Leon~博客-CSDN博客</a></h4><h4 id="RSA：参数n的分解网站-1条消息-工具法-分解-RSA-的-n-ashen的博客-CSDN博客-rsa分解n"><a href="#RSA：参数n的分解网站-1条消息-工具法-分解-RSA-的-n-ashen的博客-CSDN博客-rsa分解n" class="headerlink" title="RSA：参数n的分解网站(1条消息) 工具法: 分解 RSA 的 n_ashen的博客-CSDN博客_rsa分解n"></a><strong>RSA：参数n的分解网站</strong><a href="https://blog.csdn.net/qq_38063791/article/details/82947840">(1条消息) 工具法: 分解 RSA 的 n_ashen的博客-CSDN博客_rsa分解n</a></h4><h4 id="HGAME-Level-Week2-upx-magic-0"><a href="#HGAME-Level-Week2-upx-magic-0" class="headerlink" title="HGAME_Level-Week2-upx magic 0"></a>HGAME_Level-Week2-upx magic 0</h4><p>考点：crc16</p>
<p> 出题人：0wl </p>
<p>分值：150 </p>
<p>这题因为放错了附件所以实际上是没有 upx 加壳的，ida 查看字符串可以定位到检验 flag 的地方 题目是静态编译的所以库函数没有符号信息，通过简单的辨别可以知道所对应的库函数 这里的加密是 crc16 ，可以通过爆破的方式得到 flag。</p>
<p><img src="/2022/02/13/REVERSE/5.png" alt="5"></p>
<p><img src="/2022/02/13/REVERSE/6.png" alt="6"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">text=[<span class="number">36200</span>,<span class="number">40265</span>,<span class="number">10770</span>,<span class="number">43802</span>,<span class="number">52188</span>,<span class="number">47403</span>,<span class="number">11826</span>,<span class="number">40793</span>,<span class="number">56781</span>,<span class="number">40265</span>,<span class="number">43274</span>,<span class="number">3696</span>,<span class="number">62927</span>,<span class="number">2640</span>,<span class="number">23285</span>,<span class="number">65439</span>,<span class="number">40793</span>,<span class="number">48395</span>,<span class="number">22757</span>,<span class="number">22757</span>,<span class="number">48923</span>,<span class="number">30887</span>,<span class="number">43802</span>,<span class="number">18628</span>,<span class="number">43274</span>,<span class="number">11298</span>,<span class="number">40793</span>,<span class="number">23749</span>,<span class="number">24277</span>,<span class="number">30887</span>,<span class="number">9842</span>,<span class="number">22165</span>]</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x2e</span>,<span class="number">0x7e</span>):</span><br><span class="line">        crc=i</span><br><span class="line">        crc&lt;&lt;=<span class="number">8</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            <span class="keyword">if</span> crc&amp;<span class="number">0x8000</span>!=<span class="number">0</span>:</span><br><span class="line">                crc&lt;&lt;=<span class="number">1</span></span><br><span class="line">                crc=crc^<span class="number">0x1021</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                crc&lt;&lt;=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> text[k]==crc&amp;<span class="number">0xffff</span>:</span><br><span class="line">         <span class="built_in">print</span>(<span class="built_in">chr</span>(i),end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">         <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<h4 id="HGAME-Week1-Creakme"><a href="#HGAME-Week1-Creakme" class="headerlink" title="HGAME_Week1_Creakme"></a><strong>HGAME_Week1_Creakme</strong></h4><p><strong>知识点：TEA算法</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">decrypt</span> <span class="params">(<span class="type">uint32_t</span>* v, <span class="type">uint32_t</span>* k)</span> &#123;</span><br><span class="line">    <span class="type">uint32_t</span> delta=<span class="number">0x12345678</span>;</span><br><span class="line">    <span class="type">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=delta * <span class="number">32</span>, i;</span><br><span class="line">    <span class="type">uint32_t</span> k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i++) &#123;</span><br><span class="line">        v1 -= sum ^ ((v0&lt;&lt;<span class="number">4</span>) + k0) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k1);</span><br><span class="line">        v0 -= sum ^ ((v1&lt;&lt;<span class="number">4</span>) + k2) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k3);</span><br><span class="line">        sum -= delta;</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint32_t</span> v[]=&#123;<span class="number">1222194312u</span>, <span class="number">51123276u</span>, <span class="number">1391163586u</span>, <span class="number">3986482669u</span>, <span class="number">2921328102u</span>, <span class="number">3126465133u</span>, <span class="number">3482485930u</span>, <span class="number">1709241059u</span>&#125;,k[<span class="number">4</span>]=&#123;<span class="number">0x44434241</span>,<span class="number">0x48474645</span>,<span class="number">0x4c4b4a49</span>,<span class="number">0x504f4e4d</span>&#125;;</span><br><span class="line">    decrypt(v, k);</span><br><span class="line">    decrypt(v + <span class="number">2</span>, k);</span><br><span class="line">    decrypt(v + <span class="number">4</span>, k);</span><br><span class="line">    decrypt(v + <span class="number">8</span>, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, v);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CTF</category>
        <category>REVERSE</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>REVERSE</tag>
      </tags>
  </entry>
</search>
